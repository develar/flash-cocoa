<?xml version="1.0"?>
<ac:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
						xmlns="cocoa"
						xmlns:ac="library://acocoa"
						creationPolicy="none" width="1500" height="1500"
						creationComplete="creationCompleteHandler()">

	<fx:Script><![CDATA[
		import cocoa.HUDWindow;
		import cocoa.dialog.DialogEventMap;
		import cocoa.dialog.events.ShowDialogEvent;
		import cocoa.plaf.aqua.AquaLookAndFeel;

		import com.asfusion.mate.core.EventMap;
		import com.asfusion.mate.core.MateManager;

		import org.flyti.util.ArrayList;

		private static const testData:ArrayList = new ArrayList(new <Object>["Item 1", "Item 2", "Item 3"]);
		private static const testDataWithLongLabels:ArrayList = new ArrayList(new <Object>["Short Label", "Item 2", "Loooooooooong Item Label"]);

		private function build():void
		{
			var testContainer:Sprite = new Sprite();
			container.addDisplayObject(testContainer);
			testContainer.x = 300;
			new Builder().build(testContainer);
		}

		private function creationCompleteHandler():void
		{
			build();
			//
			//			 var a:Sprite = new Sprite();
			//				 a.x = 50;
			//				 a.y = 50;
			//				 //fillSprite(a, 0x202020);
			//				 addDisplayObject(a);
			//
			//
			//				 var g:Graphics = a.graphics;
			//				 g.lineStyle(10, 0x0000ff, 0.4);
			//				 g.beginFill(0, 0.4);
			//				 g.drawRect(0, 0, 100, 100);
			//				 g.endFill();
			//			return;

			laf = new AquaLookAndFeel();
			createDeferredContent();

						MateManager.instance.container.dispatcher.dispatchEvent(new ShowDialogEvent(new DemoApplicationDialog()));
						MateManager.instance.container.dispatcher.dispatchEvent(new ShowDialogEvent(new DemoApplicationDialogWithDialog()));

			return;
			var hudWindow:HUDWindow = new HUDWindow();
			hudWindow.resizable = false;
			hudWindow.title = "Test";
			hudWindow.contentView = new TestHUDWindow();
			MateManager.instance.container.dispatcher.dispatchEvent(new ShowDialogEvent(hudWindow));
		}

		override protected function initializeMaps():void
		{
			maps = new <EventMap>[
				new DialogEventMap()
			];
		}

		//		override protected function updateDisplayList(w:Number, h:Number):void
		//		{
		//			super.updateDisplayList(w, h);
		//
		//			graphics.clear();
		//			graphics.beginFill(0x00aa00, 0.1);
		//			graphics.drawRect(0, 0, w, h);
		//			graphics.endFill();
		//		}
		]]></fx:Script>

	<Container id="container">
		<!--<c:PushButton label="Textured Rounded" skinClass="{PushButtonSkin}"/>-->
		
		<!--<c:PopUpButton skinClass="{PopUpButtonSkin}" dataProvider="{testData}"/>-->
		<!--<c:PopUpButton skinClass="{PopUpButtonSkin}" dataProvider="{testDataWithLongLabels}"/>-->
	</Container>
</ac:WindowedApplication>